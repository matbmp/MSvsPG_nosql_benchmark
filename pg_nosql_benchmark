#/bin/bash

#################################################################################
# Copyright (c) 2013-2014, EnterpriseDB Corporation
# 
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation and/or
# other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#===============================================================================
#title           : pg_nosql_benchmark.
#description     : This script will help in benchmarking PostgreSQL (JSONB) and
#                : MongoDB (BSON).
#author          : Vibhor Kumar (vibhor.aim@gmail.com).
#date            : July 17, 2014
#version         : 2.0.1
#usage           : bash pg_nosql_benchmark
#notes           : Install Vim and Emacs to use this script.
#bash_version    : GNU bash, version 4.1.2(1)-release (x86_64-redhat-linux-gnu)
#===============================================================================

################################################################################
# set require variables.
################################################################################
DIRECTORY=$(dirname $0)
BASENAME=$(basename $0)

PGHOME="/lib/postgresql/14"
PGHOST="127.0.0.1"
PGPORT="5432"
PGUSER="postgres"
PGPASSWORD="EloElo123"
PGDATABASE="benchmark"

PGBIN="/lib/postgresql/14/bin"

################################################################################
# set mssql variables.
################################################################################
MSSQL="/opt/mssql-tools/bin/sqlcmd"
MSHOST="127.0.0.1"
MSPORT="27017"
MSUSER="SA"
MSPASSWORD="Admin1234"
MSDATABASE="benchmark"

COLLECTION_NAME="json_tables"
SAMPLEJSON="sample.json"
PG_INSERTS="sample_pg_inserts.json"
MS_INSERTS="sample_ms_inserts.json"

export PATH=$PGBIN:$PATH

################################################################################
# source library files
################################################################################
source ${DIRECTORY}/lib/pg_func_lib.sh
source ${DIRECTORY}/lib/mssql_func_lib.sh


################################################################################
# declare require arrays
################################################################################
declare -a json_rows=(10)

declare -a pg_size_time
declare -a pg_copy_time
declare -a pg_inserts_time
declare -a pg_select_time

# ms specific arrays
declare -a ms_size_time
declare -a ms_copy_time
declare -a ms_inserts_time
declare -a ms_select_time

################################################################################
# main function
################################################################################
mssql_version=$(mssql_version "${MSHOST}"          \
                        "${MSPORT}"          \
                        "${MSDATABASE}"      \
                        "${MSUSER}"          \
                        "${MSPASSWORD}"
            )

pg_version=$(pg_version "${PGHOST}"          \
                        "${PGPORT}"          \
                        "${PGDATABASE}"      \
                        "${PGUSER}"          \
                        "${PGPASSWORD}"
            )

process_log "MSSQL Version $mssql_version"
process_log "PostgreSQL Version $pg_version"


for (( indx=0 ; indx < ${#json_rows[@]} ; indx++ ))
do
   generate_json_rows "${json_rows[${indx}]}" \
                      "${SAMPLEJSON}"

   pg_json_insert_maker "${COLLECTION_NAME}"    \
                        "${json_rows[${indx}]}" \
                        "${PG_INSERTS}"

   mssql_json_insert_maker "${COLLECTION_NAME}"    \
                           "${json_rows[${indx}]}" \
                           "${MS_INSERTS}"


   remove_pg_db "${PGHOST}"     \
                "${PGPORT}"     \
                "${PGDATABASE}" \
                "${PGUSER}"     \
                "${PGPASSWORD}"
   create_pg_db "${PGHOST}"     \
                "${PGPORT}"     \
                "${PGDATABASE}" \
                "${PGUSER}"     \
                "${PGPASSWORD}"

   remove_ms_db "${MSHOST}"     \
                        "${MSPORT}"     \
                        "${MSDATABASE}"   \
                        "${MSUSER}"     \
                        "${MSPASSWORD}" \
                        "${COLLECTION_NAME}"

   create_ms_db "${MSHOST}"     \
                         "${MSPORT}"     \
                         "${MSDATABASE}" \
                         "${MSUSER}"     \
                         "${MSPASSWORD}" \
                         "${COLLECTION_NAME}"


   mk_pg_json_collection "${PGHOST}"     \
                         "${PGPORT}"     \
                         "${PGDATABASE}" \
                         "${PGUSER}"     \
                         "${PGPASSWORD}" \
                         "${COLLECTION_NAME}"

   mk_ms_json_collection "${MSHOST}"     \
                         "${MSPORT}"     \
                         "${MSDATABASE}" \
                         "${MSUSER}"     \
                         "${MSPASSWORD}" \
                         "${COLLECTION_NAME}"   

   pg_copy_time[${indx}]=$(pg_copy_benchmark  "${PGHOST}"          \
                                              "${PGPORT}"          \
                                              "${PGDATABASE}"      \
                                              "${PGUSER}"          \
                                              "${PGPASSWORD}"      \
                                              "${COLLECTION_NAME}" \
                                              "${SAMPLEJSON}"
                          )

   pg_create_index_collection "${PGHOST}"     \
                              "${PGPORT}"     \
                              "${PGDATABASE}" \
                              "${PGUSER}"     \
                              "${PGPASSWORD}" \
                              "${COLLECTION_NAME}"

   ms_copy_time[${indx}]=$(ms_copy_benchmark  "${MSHOST}"          \
                                              "${MSPORT}"          \
                                              "${MSDATABASE}"      \
                                              "${MSUSER}"          \
                                              "${MSPASSWORD}"      \
                                              "${COLLECTION_NAME}" \
                                              "${SAMPLEJSON}"
			)
   echo "$ms_copy_time[@]"
   ms_create_index_collection "${MSHOST}"     \
                              "${MSPORT}"     \
                              "${MSDATABASE}" \
                              "${MSUSER}"     \
                              "${MSPASSWORD}" \
                              "${COLLECTION_NAME}"


   pg_select_time[${indx}]=$(pg_select_benchmark "${PGHOST}"     \
                                                 "${PGPORT}"     \
                                                 "${PGDATABASE}" \
                                                 "${PGUSER}"     \
                                                 "${PGPASSWORD}" \
                                                 "${COLLECTION_NAME}"
                            )
   pg_size_time[${indx}]=$(pg_relation_size "${PGHOST}"     \
                                            "${PGPORT}"     \
                                            "${PGDATABASE}" \
                                            "${PGUSER}"     \
                                            "${PGPASSWORD}" \
                                            "${COLLECTION_NAME}"
                          )

   ms_select_time[${indx}]=$(ms_select_benchmark "${MSHOST}"     \
                                                 "${MSPORT}"     \
                                                 "${MSDATABASE}" \
                                                 "${MSUSER}"     \
                                                 "${MSPASSWORD}" \
                                                 "${COLLECTION_NAME}"
                            )
   
   echo "$ms_select_time[@]"
   ms_size_time[${indx}]=$(ms_relation_size "${MSHOST}"     \
                                            "${MSPORT}"     \
                                            "${MSDATABASE}" \
                                            "${MSUSER}"     \
                                            "${MSPASSWORD}" \
                                            "${COLLECTION_NAME}"
                          )

   echo "$ms_size_time[@]"
   mssql_dropping "${MSHOST}"     \
                  "${MSPORT}"     \
                  "${MSDATABASE}"   \
                  "${MSUSER}"     \
                  "${MSPASSWORD}" \
                  "${COLLECTION_NAME}"

   ms_inserts_time[${indx}]=$(ms_inserts_benchmark "${MSHOST}"       \
                                                           "${MSPORT}"       \
                                                           "${MSDATABASE}"     \
                                                           "${MSUSER}"       \
                                                           "${MSPASSWORD}"   \
                                                           "${COLLECTION_NAME}" \
                                                            "${MS_INSERTS}"
                                )
   
   echo "$ms_inserts_time[@]"
   delete_json_data "${PGHOST}"      \
                    "${PGPORT}"      \
                    "${PGDATABASE}"  \
                    "${PGUSER}"      \
                    "${PGPASSWORD}"  \
                    "${COLLECTION_NAME}"

   pg_inserts_time[${indx}]=$(pg_inserts_benchmark  "${PGHOST}"          \
                                                    "${PGPORT}"          \
                                                    "${PGDATABASE}"      \
                                                    "${PGUSER}"          \
                                                    "${PGPASSWORD}"      \
                                                    "${COLLECTION_NAME}" \
                                                    "${PG_INSERTS}"
                              )
done


print_result "number of rows"     "${json_rows[@]}"
print_result "PG COPY (ns)"       "${pg_copy_time[@]}"
print_result "PG INSERT (ns)"     "${pg_inserts_time[@]}"
print_result "PG SELECT (ns)"     "${pg_select_time[@]}"
print_result "PG SIZE (bytes)"    "${pg_size_time[@]}"
print_result "MS COPY (ns)"  "${ms_copy_time[@]}"
print_result "MS INSERT (ns)"  "${ms_inserts_time[@]}"
print_result "MS SELECT (ns)"  "${ms_select_time[@]}"
print_result "MS SIZE (bytes)" "${ms_size_time[@]}"

rm -rf ${SAMPLEJSON}*
rm -rf ${PG_INSERTS}
rm -rf ${MS_INSERTS}
